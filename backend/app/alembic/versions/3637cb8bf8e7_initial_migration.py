"""Initial migration

Revision ID: 3637cb8bf8e7
Revises: 
Create Date: 2024-09-11 04:32:41.350940

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '3637cb8bf8e7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('student_response')
    op.drop_index('ix_question_id', table_name='question')
    op.drop_table('question')
    op.drop_table('feedback')
    op.drop_index('ix_teacher_response_id', table_name='teacher_response')
    op.drop_table('teacher_response')
    op.drop_index('ix_course_id', table_name='course')
    op.drop_table('course')
    op.drop_table('enrollment')
    op.drop_index('ix_institution_id', table_name='institution')
    op.drop_index('ix_institution_name', table_name='institution')
    op.drop_table('institution')
    op.drop_index('ix_assignment_id', table_name='assignment')
    op.drop_table('assignment')
    op.drop_index('ix_teacher_email', table_name='teacher')
    op.drop_index('ix_teacher_id', table_name='teacher')
    op.drop_table('teacher')
    op.drop_table('teacher_institution')
    op.drop_index('ix_student_email', table_name='student')
    op.drop_table('student')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('student',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('postname', sa.VARCHAR(), nullable=True),
    sa.Column('last_name', sa.VARCHAR(), nullable=True),
    sa.Column('email', sa.VARCHAR(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_student_email', 'student', ['email'], unique=1)
    op.create_table('teacher_institution',
    sa.Column('teacher_id', sa.INTEGER(), nullable=True),
    sa.Column('institution_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['institution_id'], ['institution.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], )
    )
    op.create_table('teacher',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('postname', sa.VARCHAR(), nullable=True),
    sa.Column('last_name', sa.VARCHAR(), nullable=True),
    sa.Column('email', sa.VARCHAR(), nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_teacher_id', 'teacher', ['id'], unique=False)
    op.create_index('ix_teacher_email', 'teacher', ['email'], unique=1)
    op.create_table('assignment',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(), nullable=False),
    sa.Column('instruction', sa.TEXT(), nullable=True),
    sa.Column('points', sa.INTEGER(), nullable=False),
    sa.Column('type', sa.VARCHAR(), nullable=True),
    sa.Column('due_date', sa.DATETIME(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('course_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_assignment_id', 'assignment', ['id'], unique=False)
    op.create_table('institution',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=True),
    sa.Column('description', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_institution_name', 'institution', ['name'], unique=False)
    op.create_index('ix_institution_id', 'institution', ['id'], unique=False)
    op.create_table('enrollment',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('date', sa.DATETIME(), nullable=True),
    sa.Column('state', sa.VARCHAR(), nullable=False),
    sa.Column('student_id', sa.INTEGER(), nullable=True),
    sa.Column('course_id', sa.INTEGER(), nullable=False),
    sa.Column('course_code', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['course_code'], ['course.code'], ),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('section', sa.VARCHAR(), nullable=True),
    sa.Column('subject', sa.VARCHAR(), nullable=True),
    sa.Column('code', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('teacher_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_index('ix_course_id', 'course', ['id'], unique=False)
    op.create_table('teacher_response',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('response_text', sa.TEXT(), nullable=False),
    sa.Column('question_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_teacher_response_id', 'teacher_response', ['id'], unique=False)
    op.create_table('feedback',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('advice', sa.TEXT(), nullable=False),
    sa.Column('date', sa.DATETIME(), nullable=True),
    sa.Column('assignment_id', sa.INTEGER(), nullable=True),
    sa.Column('student_response_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignment.id'], ),
    sa.ForeignKeyConstraint(['student_response_id'], ['student_response.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_response_id')
    )
    op.create_table('question',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('question_text', sa.TEXT(), nullable=False),
    sa.Column('max_points', sa.INTEGER(), nullable=False),
    sa.Column('assignment_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_question_id', 'question', ['id'], unique=False)
    op.create_table('student_response',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('response_text', sa.TEXT(), nullable=False),
    sa.Column('grade', sa.FLOAT(), nullable=True),
    sa.Column('grades', sqlite.JSON(), nullable=True),
    sa.Column('comment', sa.TEXT(), nullable=True),
    sa.Column('state', sa.BOOLEAN(), nullable=True),
    sa.Column('file', sa.VARCHAR(), nullable=True),
    sa.Column('assignment_id', sa.INTEGER(), nullable=True),
    sa.Column('student_id', sa.INTEGER(), nullable=True),
    sa.Column('question_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignment.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
